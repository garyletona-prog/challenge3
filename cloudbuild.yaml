# Steps that Cloud Build will execute when the trigger is activated
steps:
  # Step 1: Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/hello-serverless:${SHORT_SHA}'
      - '.'
    id: 'Build Image'

  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/hello-serverless:${SHORT_SHA}'
    id: 'Push to Artifact Registry'

  # Step 3: Deploy the image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      # The name that your service will have in Cloud Run
      - 'hello-serverless-app'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/hello-serverless:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      # --- THIS LINE IS THE KEY TO MAKING THE SERVICE PUBLIC ---
      - '--allow-unauthenticated'
    id: 'Deploy to Cloud Run'

# Build options
options:
  # This line ensures the build runs in your private and secure environment
  workerPool: 'projects/${PROJECT_ID}/locations/${_REGION}/workerPools/${_PRIVATE_POOL_NAME}'
  # This option fixes the logging error for private pools
  logging: CLOUD_LOGGING_ONLY

# Save the built image URL for reference
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/hello-serverless:${SHORT_SHA}'

